"use strict" // переключает версию js на современную. Старая до 2009 года не отображала ошибки. Код по просту не работал 
//*-*-Варианты вывода данных на экран-*-*//

  // alert("HelloWorld");

  // let elem = document.getElementById('main-text');
  // elem.innerHTML = 'Ну вот и опять?)';

  // console.log('стрпница загружена');

//*-*-Переменные, их синтаксис, варианты названия-*-*//

    let videoBlockWidth = 800, // Для лучшей читаемости кода желательно записывать переменные с новой строки используя стиль "lowerCamelCase". Розделяя их ",". Так же можно записывать и в одной строке.
        video_Block_Height = 600; // стиль "under_score" - не преветствуется. В конце каждого кода, ставится ";". Без ";" - код будет работать, но по правилам написания хорошего кода - так принято

    let _ = 25; // если переменные разделить ";" - то с новой строки снова используем оператор присваив с ключевым словом "let"
    let $ = 15; // при названии переменных можно используятся "a..z A..Z 0..9 $ _". имена не могут начинатся с цыфры!

//*-*-Ошибки-*-*// !-Если в коде js есть хоть одна ошибка - код работать не будет

    // let video-lessons = 'video-lessons.mp4'; // Нельзя использовать "-" в имени переменной, так как это оператор. В строке можно использовать все что угодно
    // let 1image = '1image.png'; // Имя наченается с цифры
    // let function = 2 + 2 -5; // Для имени используется название зарезервированое в JS слово "function". Если всеже нужно исподбзовать такое имя - его можно дополнить например "mathFunction"
    // let mainHeader = 'Переменные в JavaScript'; // используются русские символы, код будет работать но так не принято. Использовать нужно латиницу

//*-*-Константы-*-*// !-Используются: 1) Дать простое имя сложным данным; 2) Неизменяемые данные в разных местах;

    const mainHeader = 'Преременные JavaScript'; // используются тогда, когда нужно создать переменную, значение которой нельзя будет изменить
    //  mainHeader = 'Что случилось?'// пытаемся изменить значение костанты "mainHeader" - код не будет работать!
    const COLOR_RED = '#b31818'; // для удобства названия цветов. В названи принято использовать заглавные буквы, если значение зарание известно. В противном случае используюися lowerCamelCase
    const USER_ID = '1741'; 

//*-*-Строки-*-*// !-Служат для хранения и обработки тестовых данных

    let firsthText = 'первый пример'; // основной тип записи строк используя одинарные кавычки
    let secText = "Второй пример"; // также можно использовать и двойные
    let therthText = `Пример когда 
                          можно переносить тест в редакторе
                              как угодно, но отображатся он будет в одной строке`; // в обратных кавычках задать строки с переносом слов
    let forthText = 'можно обьеденить строки используя' + 'оператор слодения'; // Используя математические функции

//*-*-Свойства и методы строк-*-*//

    let firstName = 'Иван';
    let lastName = 'Иванов';
    let email = '   I.Ivanov@email.com      ';
    let data = lastName.length; // свойство "length" выводит количество символов в строке, присваиваем его переменной "data". В конце свойства не ставятся "()" 

    // email = email.toLocaleLowerCase(); // Метод, обезует "()", заменяет маленькие буквы большими
    // email = email.toLocaleLowerCase().replace("@", "(at)").trim(); // в цепочке несколько методов.

//*-*-Получение подстроки-*-*//

    // lastName = lastName[0]; // будет выводится только тот символ который илет по счету, начиная с 0
    // lastName = lastName[5]; // выводит последний символ "Иванов" = "012345" 
    // lastName = lastName[lastName.length - 1]; // разширеный метод получения подстроки. Таким подходом мы всегда будем получать последний символ строки, не зависимо от ее длины. Номер символа в строке называется "индексом строки"
    // lastName = lastName[0].toUpperCase() + lastName.slice(1); // Записали первый символ в RAM. "slice()" - возвращает строку начиная с 1 символа "ванов". В результате Иввнов = "И" + "ванов" с большой буквы
    // lastName = lastName[0].toUpperCase + "..." + lastName.slice(-2); // ... первая часть такая же как и первая. Даллее склеиваем "..." с результатом работы метода slice. slice(-2) выводит последние два индекса строки
    // email = email.trim().substr(2, 4); // убераем пробелы, и выводим 4 символа строки начиная с второго
 
//*-*-Рабочий блок для вывода данных на страницу-*-*//

    // let textInBlock = document.getElementById('main-text');
    // textInBlock.innerHTML = forthText;
    // textInBlock.style.color = COLOR_RED;

    document.getElementById("data").innerHTML = data; // вывод даных хранящихся в переменнной "data" на страннице

    document.getElementById("first-name").innerHTML = firstName; // вывод данных хранящихся в переменнной
    document.getElementById("last-name").innerHTML = lastName; // вывод данных хранящихся в переменнной
    document.getElementById("email").innerHTML = email; // вывод данных хранящихся в переменнной
